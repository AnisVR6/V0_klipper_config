[mcu display]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_06800D000C43565335383320-if00
restart_method: command

[display]
lcd_type: sh1106
i2c_mcu: display
i2c_bus: i2c1a
# Set the direction of the encoder wheel
#   Standard: Right (clockwise) scrolls down or increases values. Left (counter-clockwise scrolls up or decreases values.
encoder_pins: ^display:PA3, ^display:PA4
#   Reversed: Right (clockwise) scrolls up or decreases values. Left (counter-clockwise scrolls down or increases values.
#encoder_pins: ^display:PA4, ^display:PA3
click_pin: ^!display:PA1
kill_pin: ^!display:PA5
x_offset: 2
#   Use X offset to shift the display towards the right. Value can be 0 to 3
vcomh: 31
#   Set the Vcomh value on SSD1306/SH1106 displays. This value is
#   associated with a "smearing" effect on some OLED displays. The
#   value may range from 0 to 63. Default is 0.
#   Adjust this value if you get some vertical stripes on your display. (31 seems to be a good value)

[neopixel displayStatus]
pin: display:PA0
chain_count: 1
color_order: GRB
initial_RED: 0.2
initial_GREEN: 0.05
initial_BLUE: 0





#Bed Leveling Menu Item
[menu __main __bed_leveling]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Level Bed

[menu __main __bed_leveling __preheat]
type: command
#enable: extruder.is_enabled,heater_bed.is_enabled
name: Preheat all
gcode: 
    M140 S60 
    M104 S200

[menu __main __bed_leveling __home]
type: command
name: Home All
gcode: G28
#enable: {not printer.idle_timeout.state == "Printing"}

[menu __main __bed_leveling __start]
type: command
name: Start
#enable: {not printer.idle_timeout.state == "Printing"}
gcode: 
    G28
    BED_SCREWS_ADJUST

[menu __main __bed_leveling __accept]
type: command
name: Accept
#enable: {not printer.idle_timeout.state == "Printing"}
gcode: accept

[menu __main __bed_leveling __adjust]
type: command
name: Adjusted
#enable: {not printer.idle_timeout.state == "Printing"}
gcode: adjusted

[menu __main __prepare __bed_leveling __abort_screws]
type: command
name: Abort
#enable: {not printer.idle_timeout.state == "Printing"}
gcode: abort